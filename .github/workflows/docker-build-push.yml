name: Docker Build and Push

on:
  push:
    branches:
      - main # Ejecutar en push a la rama main

jobs:
  docker:
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      SERVICES: |
        Frontend/Angular=my-frontend
        Backend/Backend-Express=my-backend-express
        Backend/Backend-Flask=my-backend-flask

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v4

      # Paso 2: Validar que los secretos de Docker estén configurados
      - name: Validate Docker secrets
        run: |
          if [ -z "$DOCKER_USERNAME" ] || [ -z "$DOCKER_PASSWORD" ]; then
            echo "ERROR: Docker secrets (DOCKER_USERNAME or DOCKER_PASSWORD) are not configured."
            echo "Skipping Docker login and image push steps."
            exit 1
          fi

      # Paso 3: Iniciar sesión en DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      # Paso 4: Construir y etiquetar imágenes Docker
      - name: Build and Tag Docker Images
        run: |
          echo "Building Docker images..."
          while IFS== read -r dir image; do
            if [ -d "./$dir" ]; then
              echo "Building image for $dir..."
              docker build -t "$DOCKER_USERNAME/$image:latest" "./$dir" || echo "ERROR: Failed to build $dir."
            else
              echo "WARNING: Directory $dir not found. Skipping build for $dir."
            fi
          done <<< "$SERVICES"

      # Paso 5: Subir las imágenes Docker
      - name: Push Docker Images
        run: |
          echo "Pushing Docker images..."
          while IFS== read -r dir image; do
            if docker images | grep -q "$image"; then
              echo "Pushing image $DOCKER_USERNAME/$image:latest..."
              docker push "$DOCKER_USERNAME/$image:latest" || echo "ERROR: Failed to push $image."
            else
              echo "WARNING: Image $DOCKER_USERNAME/$image:latest not found. Skipping push for $dir."
            fi
          done <<< "$SERVICES"
