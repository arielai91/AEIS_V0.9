name: Docker Build and Push  # Nombre del workflow

on:
  push:
    branches:
      - main  # Ejecutar en push a la rama main

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v4

      # Paso 2: Validar que los secretos de Docker estén configurados
      - name: Check Docker secrets
        run: |
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ] || [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "WARNING: Docker secrets (DOCKER_USERNAME or DOCKER_PASSWORD) are not configured."
            echo "Skipping Docker login and image push steps."
            exit 0  # Terminar el workflow sin fallar
          fi

      # Paso 3: Iniciar sesión en DockerHub (solo si los secretos están presentes)
      - name: Login to DockerHub
        if: ${{ secrets.DOCKER_USERNAME && secrets.DOCKER_PASSWORD }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        continue-on-error: true  # Permite que continúe incluso si falla

      # Paso 4: Construir y etiquetar imágenes Docker
      - name: Build and Tag Docker Images
        run: |
          if [ -d "./Frontend/Angular" ]; then
            docker build -t my-frontend ./Frontend/Angular || echo "WARNING: Frontend build failed."
          else
            echo "WARNING: Frontend directory not found. Skipping build."
          fi
          if [ -d "./Backend/Backend-Express" ]; then
            docker build -t my-backend-express ./Backend/Backend-Express || echo "WARNING: Backend Express build failed."
          else
            echo "WARNING: Backend Express directory not found. Skipping build."
          fi
          if [ -d "./Backend/Backend-Flask" ]; then
            docker build -t my-backend-flask ./Backend/Backend-Flask || echo "WARNING: Backend Flask build failed."
          else
            echo "WARNING: Backend Flask directory not found. Skipping build."
          fi
        continue-on-error: true  # Evitar fallos en el workflow

      # Paso 5: Subir las imágenes Docker (solo si los secretos están presentes)
      - name: Push Docker Images
        if: ${{ secrets.DOCKER_USERNAME && secrets.DOCKER_PASSWORD }}
        run: |
          if docker images | grep -q "my-frontend"; then
            echo "Pushing frontend image..."
          else
            echo "WARNING: Frontend image not found. Skipping push."
          fi
          if docker images | grep -q "my-backend-express"; then
            echo "Pushing backend Express image..."
          else
            echo "WARNING: Backend Express image not found. Skipping push."
          fi
          if docker images | grep -q "my-backend-flask"; then
            echo "Pushing backend Flask image..."
          else
            echo "WARNING: Backend Flask image not found. Skipping push."
          fi
        continue-on-error: true  # Evitar fallos si no hay imágenes para subir